@using MyFitScope.Web.ViewModels.Workouts
@model WorkoutsListingViewModel

@{
    this.ViewData["Title"] = "Workouts";
}

<section class="container">
    <div class="row">
        <div class="col-md-8 bg-white rcorners p-4">
            @{
                var tokens = Model.WorkoutCategory.Split("=", StringSplitOptions.RemoveEmptyEntries);
                var resultType = tokens[0];
                var resultValue = tokens[1];
            }

            @if (resultType == "search")
            {
                <h1 class="text-center">Search results for "@resultValue":</h1>
            }
            else
            {
                @if (resultValue == "All")
                {
                    <h1 class="text-center">All Workouts</h1>
                }
                else if (resultValue == "Custom")
                {
                    @if (User.IsInRole("Admin"))
                    {
                        <h1 class="text-center">Users custom created Workouts</h1>
                    }
                    else
                    {
                        <h1 class="text-center">Your custom created Workouts</h1>
                    }
                }
                else
                {
                    <h1 class="text-center">Workouts of category "@resultValue"</h1>
                }
            }

            <hr />

            @if (Model.Workouts.Count != 0)
            {
                var workouts = Model.Workouts.OrderByDescending(w => w.CreatedOn).ToList();

                foreach (var workout in workouts)
                {
                    var workoutCategpry = workout.WorkoutTypeTitle.ToLower();
                    var background = string.Empty;
                    var blurEffect = string.Empty;

                    if (workoutCategpry == "home work")
                    {
                        background = "backgrounds-home";
                        blurEffect = "content-home";
                    }
                    else
                    {
                        background = "backgrounds-" + workoutCategpry;
                        blurEffect = "content-" + workoutCategpry;
                    }

                    <div class="row no-gutters border rounded overflow-hidden flex-md-row mb-4 shadow-sm h-md-250 position-relative">
                        <div class="col d-flex flex-column position-static @background">
                            <div class="@blurEffect">
                                <strong class="d-inline-block mb-2 text-primary">@workout.WorkoutTypeTitle</strong>
                                <h3 class="mb-0 text-white">@workout.Name</h3>
                                <div class="mb-1 text-white">Creator: @workout.CreatorName</div>
                                <p class="card-text mb-auto text-white">@workout.ShortDescription</p>
                                <div>
                                    <a asp-controller="Workouts" asp-action="Details" asp-route-workoutId="@workout.Id" class="stretched-link">Continue reading</a>
                                </div>
                            </div>           
                        </div>
                    </div>
                }

                <!-- Pagination -->
                <nav class="text-center mt-3">
                    <ul class="pagination justify-content-center">
                        @{
                            var previousActive = Model.Workouts.HasPreviousPage ? string.Empty : " disabled";
                            var nextActive = Model.Workouts.HasNextPage ? string.Empty : " disabled";
                        }

                        <li class="@("page-item" + previousActive)">
                            <a class="page-link" asp-controller="Workouts" asp-action="WorkoutsListing" asp-route-articleCategory="@Model.WorkoutCategory" asp-route-pageIndex="@(Model.Workouts.PageIndex - 1)">Previous</a>
                        </li>

                        @for (var i = 1; i <= Model.Workouts.TotalPages; i++)
                        {
                            var currentActive = Model.Workouts.PageIndex == i ? " active" : string.Empty;

                            <li class="@("page-item" + currentActive)">
                                <a class="page-link" asp-controller="Workouts" asp-action="WorkoutsListing" asp-route-articleCategory="@Model.WorkoutCategory" asp-route-pageIndex="@i">@i</a>
                            </li>

                        }

                        <li class="@("page-item" + nextActive)">
                            <a class="page-link" asp-controller="Workouts" asp-action="WorkoutsListing" asp-route-articleCategory="@Model.WorkoutCategory" asp-route-pageIndex="@(Model.Workouts.PageIndex + 1)">Next</a>
                        </li>
                    </ul>
                </nav>

            }
            else
            {
                @if (resultType == "search")
                {
                    <p>Sorry, No exercise found...</p>
                }
                else
                {
                    @if (Model.WorkoutCategory == "Custom")
                    {
                        <p>You have no Custom Workouts. You can create one <a asp-controller="Workouts" asp-action="AddWorkout">here</a>.</p>
                    }
                    else
                    {
                        <p>Sorry, we don't have any workouts in this category at this moment...</p>
                    }
                }

            }
        </div>
        <div class="col-md-4">
            <!-- Search Widget -->
            <div class="card my-4">
                <h5 class="card-header bg-dark text-white">Search</h5>
                <div class="card-body">
                    <form method="get" asp-controller="Workouts" asp-action="WorkoutsListing">
                        <div class="input-group form-group">
                            <input type="text" class="form-control" name="workoutCategory" placeholder="Search for...">
                            <span class="input-group-btn">
                                <button type="submit" class="btn btn-secondary">Go!</button>
                            </span>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>


