@using MyFitScope.Common
@using MyFitScope.Web.ViewModels.Exercises
@model SearchExercisesViewModel

@{
    this.ViewData["Title"] = "Exercises";
}


<section class="container">
    <div class="row">
        <div class="col-md-8 bg-white rcorners p-3">
            <h1 class="text-center">@Model.PageTitle</h1>
            <hr />

            @if (Model.Exercises.Count != 0)
            {
                var exercises = Model.Exercises.ToList();

                <!-- Exercises List-->
                foreach (var exercise in exercises)
                {
                    <ul class="list-unstyled col-md-12 border border-light">
                        <li class="media">
                            <img class="mb-2 mr-3  exercise-listing-image" src="@exercise.ThumbnailUrl" alt="Thumbnail Image">
                            <div class="media-body">
                                <a asp-controller="Exercises" asp-action="Details" asp-route-id="@exercise.Id"><h5 class="mt-0 mb-1">@exercise.Name</h5></a>
                                <p>Created by: @exercise.CreatorName</p>
                                <p>Muscle Group: @exercise.MuscleGroupTitle</p>

                                @exercise.ShortDescription
                            </div>
                        </li>
                    </ul>
                }

                <!-- Pagination -->
                <nav>
                    <ul class="pagination justify-content-center">
                        @{
                            var previousActive = Model.Exercises.HasPreviousPage ? string.Empty : " disabled";
                            var nextActive = Model.Exercises.HasNextPage ? string.Empty : " disabled";
                        }

                        <li class="@("page-item" + previousActive)">
                            <a class="page-link" asp-controller="Exercises" asp-action="Search" asp-route-keyWord="@Model.KeyWord" asp-route-pageIndex="@(Model.Exercises.PageIndex - 1)">Previous</a>
                        </li>

                        @for (var i = 1; i <= Model.Exercises.TotalPages; i++)
                        {
                            var currentActive = Model.Exercises.PageIndex == i ? " active" : string.Empty;

                            <li class="@("page-item" + currentActive)">
                                <a class="page-link" asp-controller="Exercises" asp-action="Search" asp-route-keyWord="@Model.KeyWord" asp-route-pageIndex="@i">@i</a>
                            </li>
                        }

                        <li class="@("page-item" + nextActive)">
                            <a class="page-link" asp-controller="Exercises" asp-action="Search" asp-route-keyWord="@Model.KeyWord" asp-route-pageIndex="@(Model.Exercises.PageIndex + 1)">Next</a>
                        </li>
                    </ul>
                </nav>
            }
            else
            {
                <p>@Model.NoResultsMessage</p>
            }
        </div>
        <div class="col-md-4">
            <!-- Search Widget -->
            <div class="card my-4">
                <h5 class="card-header bg-dark text-white">Search</h5>
                <div class="card-body">
                    <form method="get" asp-controller="Exercises" asp-action="Search">
                        <div class="input-group form-group">
                            <input type="text" class="form-control" name="keyWord" placeholder="Search for...">
                            <span class="input-group-btn">
                                <button type="submit" class="btn btn-secondary">Go!</button>
                            </span>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>

