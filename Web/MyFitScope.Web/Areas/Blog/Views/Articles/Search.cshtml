@using MyFitScope.Web.ViewModels.Articles
@model SearchArticlesViewModel

@{
    this.Layout = "_ArticleLayout";
    this.ViewData["Title"] = "Articles";
}

<section class="bg-white rcorners p-3">
    <!-- Page Content -->
    <h1 class="text-center">@Model.PageTitle</h1>
    <hr />

    @if (Model.Articles.Count() == 0)
    {
        <p>@Model.NoResultsMessage</p>

    }
    else
    {
        var articles = Model.Articles.ToList();

        <!-- Articles List -->
        @foreach (var article in articles)
        {
            <!-- Article Card -->
            <div class="card mb-4 rcorners">
                @if (article.ImageUrl != null)
                {
                    <img src="@article.ImageUrl" class="card-img-top r-top-corners" alt="@article.Title">
                }
                else
                {
                    <img src="/Images/article_default_image.jpg" class="card-img-top r-top-corners" alt="@article.Title">
                }

                <div class="card-body bg-dark text-white">
                    <h2 class="card-title pb-2 border-bottom border-light">@article.Title</h2>
                    <p>Category: @article.CategoryTitle</p>
                    <p class="card-text indent-text">@article.ShortContent</p>
                    <a asp-controller="Articles" asp-action="Details" asp-route-articleId="@article.Id" class="btn btn-primary">Read More &rarr;</a>
                </div>
                <div class="card-footer text-muted">
                    Posted on <time datetime="@article.CreatedOn.ToString("O")"></time> by @article.UserUserName
                </div>
            </div>
        }

        <!-- Pagination -->
        <nav class="text-center mt-3">
            <ul class="pagination justify-content-center">
                @{
                    var previousActive = Model.Articles.HasPreviousPage ? string.Empty : " disabled";
                    var nextActive = Model.Articles.HasNextPage ? string.Empty : " disabled";
                }

                <li class="@("page-item" + previousActive)">
                    <a class="page-link text-dark" asp-controller="Articles" asp-action="Search" asp-route-keyWord="@Model.KeyWord" asp-route-pageIndex="@(Model.Articles.PageIndex - 1)">Previous</a>
                </li>

                @for (var i = 1; i <= Model.Articles.TotalPages; i++)
                {
                    var currentActive = Model.Articles.PageIndex == i ? " active" : string.Empty;

                    <li class="@("page-item" + currentActive)">
                        <a class="page-link" asp-controller="Articles" asp-action="Search" asp-route-keyWord="@Model.KeyWord" asp-route-pageIndex="@i">@i</a>
                    </li>

                }

                <li class="@("page-item" + nextActive)">
                    <a class="page-link text-dark" asp-controller="Articles" asp-action="Search" asp-route-keyWord="@Model.KeyWord" asp-route-pageIndex="@(Model.Articles.PageIndex + 1)">Next</a>
                </li>
            </ul>
        </nav>
    }
</section>

